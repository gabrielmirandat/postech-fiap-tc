name: Flow to deploy production artifact

on:
  push:
    branches:
     - feature**

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Protocol Buffers Compiler
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler
      - name: Check protoc version
        run: protoc --version
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build with Maven
        run: mvn -B package -Dmaven.test.skip=true
      - name: Upload orders-api artifact
        uses: actions/upload-artifact@v2
        with:
          name: orders-artifact
          path: |
            ./orders/target/orders*.jar
            ./orders/target/newrelic/newrelic.jar
            ./orders/src/main/resources/newrelic/newrelic.yml
      - name: Upload menu-api artifact
        uses: actions/upload-artifact@v2
        with:
          name: menu-artifact
          path: ./menu/target/menu*.jar
  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Extract short SHA
        id: short-sha
        run: echo "::set-output name=sha::$(git rev-parse --short ${{ github.sha }})"
      - name: Download orders-api artifact
        uses: actions/download-artifact@v2
        with:
          name: orders-artifact
          path: ./temp/orders
      - name: Reorganize orders-api files
        run: |
          find ./temp/orders -type f -exec printf '%s\n' {} \;
          mkdir -p ./orders/target/newrelic
          mkdir -p ./orders/src/main/resources/newrelic
          mv ./temp/orders/target/newrelic/newrelic.jar ./orders/target/newrelic/newrelic.jar
          mv ./temp/orders/src/main/resources/newrelic/newrelic.yml ./orders/src/main/resources/newrelic/newrelic.yml
          mv ./temp/orders/target/orders-0.0.1-SNAPSHOT.jar ./orders/target/
      - name: Download menu-api artifact
        uses: actions/download-artifact@v2
        with:
          name: menu-artifact
          path: ./menu/target
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker images
        run: |
          VERSION="v${{ github.run_number }}-${{ steps.short-sha.outputs.sha }}"
          docker build -t gabrielmirandat/postech-fiap-tc-orders-api:$VERSION ./orders
          docker push gabrielmirandat/postech-fiap-tc-orders-api:$VERSION
          docker build -t gabrielmirandat/postech-fiap-tc-menu-api:$VERSION ./menu
          docker push gabrielmirandat/postech-fiap-tc-menu-api:$VERSION

  tag:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Extract short SHA
        id: short-sha
        run: echo "::set-output name=sha::$(git rev-parse --short ${{ github.sha }})"
      - name: Create and push tag
        run: |
          VERSION="v${{ github.run_number }}-${{ steps.short-sha.outputs.sha }}"
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git tag -a $VERSION -m "Deploying version $VERSION"
          git push origin $VERSION

#  deploy:
#    needs: tag
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Terraform
#        uses: hashicorp/setup-terraform@v1
#        with:
#          terraform_version: 1.0.0
#      - name: Terraform Init
#        run: terraform init
#      - name: Terraform Apply
#       run: terraform apply -auto-approve
#      - name: Update Kubernetes deployment
#        run: |
#          kubectl set image deployment/orders-api orders-api=gabrielmirandat/orders-api:${{ github.sha }} --record
#          kubectl set image deployment/menu-api menu-api=gabrielmirandat/menu-api:${{ github.sha }} --record
