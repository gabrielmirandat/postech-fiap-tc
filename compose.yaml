version: '3.8'
services:

  #  core-orders:
  #    container_name: postech_core_orders
  #    build: ./core-orders
  #    depends_on:
  #      - mongo
  #      - kafka
  #    ports:
  #      - "8001:8001"
  #    networks:
  #      - postech_network
  #    environment:
  #      MONGODB_CONN_STRING: mongodb://dummy:dummy@mongo:27017
  #      MONGODB_CONN_DB: postech_db
  #      KAFKA_SERVER_URL: kafka:9092
  #      KAFKA_GROUP_ID: orders-group-id
  #      NEWRELIC_OTLP_URL: https://otlp.nr-data.net:4317
  #      NEWRELIC_APP_NAME: core-orders-app
  #      NEWRELIC_SERVICE_KEY: 0656b2287b6f1b1dd90aa0bdd71ff312FFFFNRAL

  mongo:
    container_name: postech_mongo
    image: mongo:latest
    ports:
      - "27017:27017"
    networks:
      - postech_network
    environment:
      MONGO_INITDB_ROOT_USERNAME: dummy
      MONGO_INITDB_ROOT_PASSWORD: dummy
      MONGO_INITDB_DATABASE: postech_db

  mongo-express:
    container_name: postech_mongo_express
    image: mongo-express
    depends_on:
      - mongo
    ports:
      - "8081:8081"
    networks:
      - postech_network
    restart: on-failure
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: dummy
      ME_CONFIG_MONGODB_ADMINPASSWORD: dummy
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'
      ME_CONFIG_MONGODB_AUTH_DATABASE: admin
      ME_CONFIG_MONGODB_PORT: 27017

  redis:
    container_name: postech_redis
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - postech_network

  #  postgres:
  #    container_name: postech_postgres
  #    image: postgres:latest
  #    ports:
  #      - "5432:5432"
  #    networks:
  #      - postech_network
  #    environment:
  #      POSTGRES_USER: dummy
  #      POSTGRES_PASSWORD: dummy
  #      POSTGRES_DB: postech_db

  zookeeper:
    container_name: postech_zookeeper
    image: confluentinc/cp-zookeeper:latest
    networks:
      - postech_network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    container_name: postech_kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092" # Map the external port to the internal port
    networks:
      - postech_network
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

#  kafdrop:
#    container_name: postech_kafdrop
#    image: obsidiandynamics/kafdrop:latest
#    depends_on:
#      - kafka
#    ports:
#      - "19000:9000"
#    networks:
#      - postech_network
#    environment:
#      KAFKA_BROKERCONNECT: kafka:29092

#  rabbitmq:
#    container_name: postech_rabbitmq
#    image: rabbitmq:management
#    ports:
#      - "15672:15672"
#      - "5672:5672"
#    networks:
#      - postech_network

networks:
  postech_network:
    driver: bridge
